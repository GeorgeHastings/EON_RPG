"use strict";var NewPlayer=function(e,t,o,r,a,i,n,s,l,p,c,h){this.NewPlayerName=e,this.level=t,this.healthMax=o,this.healthTotal=r,this.armor=a,this.toughness=i,this.quickness=n,this.equippedWeapon=s,this.equippedArmor=l,this.inventory=p,this.gold=c,this.experience=h},Player=new NewPlayer("You",1,25,25,0,0,1,"",{head:"",chest:"",back:"",belt:"",pants:"",boots:""},[],0,0);NewPlayer.prototype.levelUp=function(){this.level=this.level+1,this.toughness=this.toughness+1,this.quickness=this.quickness+1,this.healthTotal=this.healthMax,this.updateStats(),UI.combatLog.renderCombatLog(GameState.messages.gainLvl)},NewPlayer.prototype.calcNexLevelExp=function(){for(var e=80,t=0;t<NewPlayer.level;t++)e+=20*(t+1);return e},NewPlayer.prototype.updateExperience=function(e){this.experience=this.experience+e,UI.combatLog.renderCombatLog(colorize("You","#fff")+" gained "+colorize(e+" experience.","#fff"))},NewPlayer.prototype.updateStats=function(){this.setHealth(),this.setDamage(),this.setArmor(),this.setToughness(),this.setDamageReduction(),this.setQuicknessProc(),UI.statlist.renderStats()},NewPlayer.prototype.updateGold=function(e){this.gold+=e,UI.inventory.renderGold()},NewPlayer.prototype.setHealth=function(){this.health=""+this.healthTotal+"/"+this.healthMax},NewPlayer.prototype.setArmor=function(){this.armor=0;for(var e in this.equippedArmor)this.equippedArmor[e].armorAmt&&(this.armor+=this.equippedArmor[e].armorAmt);this.armor+=this.toughness},NewPlayer.prototype.setDamage=function(){this.equippedWeapon?this.damage=""+this.equippedWeapon.damage[0]+"-"+this.equippedWeapon.damage[1]:this.damage="0-2"},NewPlayer.prototype.setDamageReduction=function(){this.damageReduction=(1-.03*this.armor/(1+.03*this.armor)).toFixed(2)},NewPlayer.prototype.setToughness=function(){this.healthMax=25+this.toughness},NewPlayer.prototype.setQuicknessProc=function(){this.quicknessProc=(.02*this.quickness/(1+.02*this.quickness)*100).toFixed(2)},NewPlayer.prototype.getBaseDamage=function(){var e;e=this.equippedWeapon?roll(this.equippedWeapon.damage[0],this.equippedWeapon.damage[1]):roll(0,3),this.baseDamage=e},NewPlayer.prototype.rollQuicknessProc=function(){var e=roll(0,100);return e<=this.quicknessProc?!0:!1},NewPlayer.prototype.attack=function(e){this.getBaseDamage();var t=Math.round(this.baseDamage*e.damageReduction),o="hit",r="yellow";this.rollQuicknessProc()&&(t=2*t,o=""+colorize("critically hit",UI.colors.red),r=UI.colors.red),e.rollQuicknessProc()?UI.combatLog.renderCombatLog(colorize(e.healthTotal,colorHealth(e.healthTotal/e.healthMax))+" "+colorize(e.name,UI.colors.entity)+" "+colorize("dodged","yellow")+" "+colorize(this.name,UI.colors.entity)+" for 0"):(e.healthTotal-=t,UI.combatLog.renderCombatLog(colorize(this.healthTotal,colorHealth(this.healthTotal/this.healthMax))+" "+colorize(this.name,UI.colors.entity)+" "+o+" "+colorize(e.name,UI.colors.entity)+' for <span style="color: '+r+';">'+t+"</span>")),e!==NewPlayer&&NewPlayer.equippedWeapon.effect&&"ItemProc"===NewPlayer.equippedWeapon.effect.constructor.name&&NewPlayer.equippedWeapon.effect.run()&&(e.healthTotal-=NewPlayer.equippedWeapon.effect.amt,UI.combatLog.renderCombatLog("Your "+colorize(NewPlayer.equippedWeapon.name,UI.colors[NewPlayer.equippedWeapon.rarity])+" strikes "+colorize(e.name,UI.colors.entity)+' for <span style="color: '+r+';">'+NewPlayer.equippedWeapon.effect.amt+"</span>")),NewPlayer.updateStats()},NewPlayer.prototype.pickUpGold=function(){var e=getObj(Enemies,GameState.currentMoment.enemy).level,t=roll(4,8)*e;NewPlayer.updateGold(t),UI.combatLog.renderCombatLog(""+colorize("You",UI.colors.NewPlayer)+" found "+colorize(t+" gold.",UI.colors.gold))},NewPlayer.prototype.addToInventory=function(e){NewPlayer.inventory.push(e),UI.inventory.renderInventoryItem(e)},NewPlayer.prototype.pickUpLoot=function(){var e=map(GameState.currentMoment.dropLoot,GameState.processRandomLoot);console.log(e),GameState.currentMoment.dropLoot=e,forEach(e,NewPlayer.addToInventory),UI.combatLog.renderLootMessage()},NewPlayer.prototype.removeFromInventory=function(e,t){removeFromArr(this.inventory,e),UI.inventory.removeInventoryItem(t)},NewPlayer.prototype.equipWeapon=function(e){this.unequipCurrentWeapon(),this.equippedWeapon=e,this.updateStats()},NewPlayer.prototype.equipArmor=function(e){var t=this.equippedArmor[e.slot];t&&NewPlayer.unequipArmor(this.equippedArmor[e.slot]),this.equippedArmor[e.slot]=e,NewPlayer.updateStats()},NewPlayer.prototype.unequipArmor=function(e){this.equippedArmor[e.slot]="",e.effect&&forEachMethod(e.effect,"removeBuff")},NewPlayer.prototype.removeWepBuff=function(e){var t="StatBuff"===e.constructor.name;t===!0&&e.removeBuff()},NewPlayer.prototype.unequipCurrentWeapon=function(){var e=this.equippedWeapon;e.effect&&forEach(e.effect,NewPlayer.removeWepBuff),e&&(e="")},NewPlayer.prototype.purchaseItem=function(){var e=this.getAttribute("data-item"),t=getObj(Items.all,e),o=NewPlayer.gold>=t.getPurchasePrice();o?(NewPlayer.updateGold(-t.getPurchasePrice()),NewPlayer.addToInventory(t),UI.combatLog.renderItemTransaction(colorize(t.name,UI.colors[t.rarity]),t.getPurchasePrice(),"bought")):UI.combatLog.renderCannotPurchaseMessage(colorize(t.name,UI.colors[t.rarity]),t.getPurchasePrice())},NewPlayer.prototype.sellItem=function(){var e=this.getAttribute("data-item"),t=getObj(Items.all,e);NewPlayer.updateGold(t.getSalePrice()),t===NewPlayer.equippedWeapon&&NewPlayer.unequipCurrentWeapon(),t===NewPlayer.equippedArmor[t.slot]&&NewPlayer.unequipArmor(t),NewPlayer.removeFromInventory(t,this),NewPlayer.updateStats(),UI.itemDescription.hideItemDescription(),UI.combatLog.renderItemTransaction(colorize(t.name,UI.colors[t.rarity]),t.getSalePrice(),"sold")},NewPlayer.prototype.reset=function(){Player=new NewPlayer};